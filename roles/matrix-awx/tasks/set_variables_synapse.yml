
- name: Set matrix_synapse_auto_join_rooms_final if matrix_synapse_auto_join_rooms is empty
  set_fact:
    matrix_synapse_auto_join_rooms_final: '{{ matrix_synapse_auto_join_rooms }}'
  when: matrix_synapse_auto_join_rooms|length == 0

- name: Set matrix_synapse_auto_join_rooms_final if matrix_synapse_auto_join_rooms is not empty
  command: echo "'{{ matrix_synapse_auto_join_rooms }}'" | sed "s/,/\',\'/g"
  register: parsed_auto_join_rooms_output
  when: matrix_synapse_auto_join_rooms|length > 0

- name: Set matrix_synapse_auto_join_rooms_final if matrix_synapse_auto_join_rooms is not empty
  set_fact:
    matrix_synapse_auto_join_rooms_final: '{{ parsed_auto_join_rooms_output.stdout }}'
  when: matrix_synapse_auto_join_rooms|length > 0

- debug:
    msg: '{{ matrix_synapse_auto_join_rooms_final }}'

- name: Record Synapse variables locally on AWX
  delegate_to: 127.0.0.1
  lineinfile:
    path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
    regexp: "^#? *{{ item.key | regex_escape() }}:"
    line: "{{ item.key }}: {{ item.value }}"
    insertafter: '# Synapse Settings'
  with_dict:
    'matrix_synapse_allow_public_rooms_over_federation': '{{ matrix_synapse_allow_public_rooms_over_federation }}'
    'matrix_synapse_enable_registration': '{{ matrix_synapse_enable_registration }}'
    'matrix_synapse_federation_enabled': '{{ matrix_synapse_federation_enabled }}'
    'matrix_synapse_enable_group_creation': '{{ matrix_synapse_enable_group_creation }}'
    'matrix_synapse_auto_join_rooms': '[{{ matrix_synapse_auto_join_rooms_final }}]'
    'matrix_synapse_use_presence': '{{ matrix_synapse_use_presence }}'
    'matrix_synapse_max_upload_size_mb': '{{ matrix_synapse_max_upload_size_mb }}'

- name: Record Synapse Extension variables locally on AWX
  delegate_to: 127.0.0.1
  lineinfile:
    path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
    regexp: "^#? *{{ item.key | regex_escape() }}:"
    line: "{{ item.key }}: {{ item.value }}"
    insertbefore: '# End Synapse Extension'
  with_dict:
    '  enable_registration_captcha': '{{ ext_enable_registration_captcha }}'
    '  recaptcha_public_key': '{{ ext_recaptcha_public_key }}'
    '  recaptcha_private_key': '{{ ext_recaptcha_private_key }}'

- name: Copy the new matrix_vars.yml file to the target machine
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
    dest: /matrix/awx/
    mode: '0600'

- name: Save new 'Configure Element' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: 'roles/matrix-awx/templates/configure_synapse.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}//configure_synapse.json'

- name: Copy new 'Configure Synapse' survey.json to target machine
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_synapse.json'
    dest:  '/matrix/awx/configure_synapse.json'
    mode: 0644

- name: Recreate 'Configure Synapse' job template
  delegate_to: 127.0.0.1
  tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Synapse"
    description: "Configure Synapse (homeserver) settings."
    extra_vars_path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.yml'
    job_type: run
    job_tags: "start,setup-synapse"
    inventory: "{{ member_id }} Inventory"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_synapse.json') }}"
    become_enabled: yes
    state: present
    verbosity: 1

