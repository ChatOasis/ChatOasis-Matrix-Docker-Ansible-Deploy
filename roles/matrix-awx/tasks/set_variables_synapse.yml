
#- name: Set matrix_synapse_auto_join_rooms if matrix_synapse_auto_join_rooms_raw is not empty part 1
#  shell: |
#    echo "['{{ matrix_synapse_auto_join_rooms_raw }}']" | sed "s/,/\',\'/g"
#  register: parsed_auto_join_rooms_output
#  when: (matrix_synapse_auto_join_rooms_raw is defined) and (matrix_synapse_auto_join_rooms_raw|length > 0) and (matrix_synapse_auto_join_rooms_raw != [])

#- name: Set matrix_synapse_auto_join_rooms if matrix_synapse_auto_join_rooms_raw is not empty part 2
#  set_fact:
#    matrix_synapse_auto_join_rooms: '{{ parsed_auto_join_rooms_output.stdout }}'
#  when: (matrix_synapse_auto_join_rooms_raw is defined) and (matrix_synapse_auto_join_rooms_raw|length > 0)

- name: Record Synapse variables locally on AWX
  delegate_to: 127.0.0.1
  lineinfile:
    path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
    regexp: "^#? *{{ item.key | regex_escape() }}:"
    line: "{{ item.key }}: {{ item.value }}"
    insertafter: '# Synapse Settings'
  with_dict:
    'matrix_synapse_allow_public_rooms_over_federation': '{{ matrix_synapse_allow_public_rooms_over_federation }}'
    'matrix_synapse_enable_registration': '{{ matrix_synapse_enable_registration }}'
    'matrix_synapse_federation_enabled': '{{ matrix_synapse_federation_enabled }}'
    'matrix_synapse_enable_group_creation': '{{ matrix_synapse_enable_group_creation }}'
    'matrix_synapse_use_presence': '{{ matrix_synapse_use_presence }}'
    'matrix_synapse_max_upload_size_mb': '{{ matrix_synapse_max_upload_size_mb }}'
    'matrix_synapse_url_preview_enabled': '{{ matrix_synapse_url_preview_enabled }}'
    'matrix_synapse_allow_guest_access': '{{ matrix_synapse_allow_guest_access }}'
  
- name: Remove Synapse variable 'matrix_synapse_auto_join_rooms' locally on AWX, if raw inputs empty
  delegate_to: 127.0.0.1
  lineinfile:
    path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
    regexp: "^matrix_synapse_auto_join_rooms: .*$"
    state: absent
  when: matrix_synapse_auto_join_rooms_raw|length == 0

- name: If the raw inputs is not empty start constructing parsed auto_join_rooms list
  set_fact:
    matrix_synapse_auto_join_rooms: |
      {{ matrix_synapse_auto_join_rooms_raw.splitlines() | join("','") | replace('\\n','') }}
  when: matrix_synapse_auto_join_rooms_raw|length > 0

- debug:
    msg: "{{ matrix_synapse_auto_join_rooms_raw|length }}"

- debug:
    msg: "{{ matrix_synapse_auto_join_rooms_raw }}"
    
- debug:
    msg: "{{ matrix_synapse_auto_join_rooms }}"

- name: Record Synapse variable 'matrix_synapse_auto_join_rooms' locally on AWX, if it's not blank
  delegate_to: 127.0.0.1
  lineinfile:
    path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
    regexp: "^#? *{{ item.key | regex_escape() }}:"
    line: "{{ item.key }}: {{ item.value }}"
    insertafter: '# Synapse Settings'
  with_dict:
    "matrix_synapse_auto_join_rooms": "['{{ matrix_synapse_auto_join_rooms }}']"
  when: matrix_synapse_auto_join_rooms_raw|length > 0

#- name: Set matrix_synapse_auto_join_rooms_raw to a empty string if undefined
#  set_fact: matrix_synapse_auto_join_rooms_raw=""
#  when: (matrix_synapse_auto_join_rooms_raw is not defined) or (matrix_synapse_auto_join_rooms_raw|length == 0)

- name: Record Synapse Shared Secret if it's defined
  delegate_to: 127.0.0.1
  lineinfile:
    path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
    regexp: "^#? *{{ item.key | regex_escape() }}:"
    line: "{{ item.key }}: {{ item.value }}"
    insertafter: '# Synapse Settings'
  with_dict:
    'matrix_synapse_registration_shared_secret': '{{ matrix_synapse_registration_shared_secret }}'
  when: matrix_synapse_registration_shared_secret|length > 0

- name: Record registations_require_3pid extra variable if true
  delegate_to: 127.0.0.1
  lineinfile:
    path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
    regexp: "{{ item }}:"
    line: "{{ item }}"
    insertbefore: '# End Synapse Extension'
  with_items:
    - "  registrations_require_3pid:"
    - "    - email"
  when: ext_registrations_require_3pid|bool

- name: Remove registrations_require_3pid extra variable if false
  delegate_to: 127.0.0.1
  lineinfile:
    path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
    regexp: "{{ item }}:"
    line: "{{ item }}"
    insertbefore: '# End Synapse Extension'
    state: absent
  with_items:
    - "  registrations_require_3pid:"
    - "    - email"
  when: not ext_registrations_require_3pid|bool

- name: Set Federation Whitelisting 1
  delegate_to: 127.0.0.1
  lineinfile:
    path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
    line: "  federation_domain_whitelist:"
    insertafter: 'matrix_synapse_configuration_extension_yaml: |'
  when: ext_federation_whitelist_raw|length > 0

- name: Set Federation Whitelisting 2
  delegate_to: 127.0.0.1
  lineinfile:
    path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
    regexp: "    - {{ item.key }}"
    line: "    - {{ item.key }}"
    insertafter: '  federation_domain_whitelist:'
  with_items: "{{ ext_federation_whitelist_raw.splitlines() }}"
  when: ext_federation_whitelist_raw|length > 0

- name: Remove Federation Whitelisting 1
  delegate_to: 127.0.0.1
  replace:
    path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
    regexp: "/^    - [a-z0-9.]+$/gm"
    after: '  federation_domain_whitelist:'
    before: '# End Synapse Extension'
  when: ext_federation_whitelist_raw|length == 0

- name: Remove Federation Whitelisting 2
  delegate_to: 127.0.0.1
  lineinfile:
    path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
    line: "  federation_domain_whitelist:"
    insertafter: 'matrix_synapse_configuration_extension_yaml: |'
    state: absent
  when: ext_federation_whitelist_raw|length == 0

- name: Set ext_recaptcha_public_key to a 'public-key' if undefined
  set_fact: ext_recaptcha_public_key="public-key"
  when: (ext_recaptcha_public_key is not defined) or (ext_recaptcha_public_key|length == 0)

- name: Set ext_recaptcha_private_key to a 'private-key' if undefined
  set_fact: ext_recaptcha_private_key="private-key"
  when: (ext_recaptcha_private_key is not defined) or (ext_recaptcha_private_key|length == 0)

- name: Record Synapse Extension variables locally on AWX
  delegate_to: 127.0.0.1
  lineinfile:
    path: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
    regexp: "^#? *{{ item.key | regex_escape() }}:"
    line: "{{ item.key }}: {{ item.value }}"
    insertbefore: '# End Synapse Extension'
  with_dict:
    '  enable_registration_captcha': '{{ ext_enable_registration_captcha }}'
    '  recaptcha_public_key': '{{ ext_recaptcha_public_key }}'
    '  recaptcha_private_key': '{{ ext_recaptcha_private_key }}'

- name: Copy new 'matrix_vars.yml' to target machine
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/matrix_vars.yml'
    dest: '/matrix/awx/matrix_vars.yml'
    mode: '0660'

- name: Save new 'Configure Synapse' survey.json to the AWX tower, template
  delegate_to: 127.0.0.1
  template:
    src: 'roles/matrix-awx/templates/configure_synapse.json.j2'
    dest: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}//configure_synapse.json'

- name: Copy new 'Configure Synapse' survey.json to target machine
  copy:
    src: '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_synapse.json'
    dest:  '/matrix/awx/configure_synapse.json'
    mode: '0660'

- name: Collect AWX admin token the hard way!
  delegate_to: 127.0.0.1
  shell: |
      curl -sku {{ tower_username }}:{{ tower_password }} -H "Content-Type: application/json" -X POST -d '{"description":"Tower CLI", "application":null, "scope":"write"}' https://{{ tower_host }}/api/v2/users/1/personal_tokens/ | jq '.token' | sed -r 's/\"//g'
  register: tower_token
  no_log: True

- name: Recreate 'Configure Synapse' job template
  delegate_to: 127.0.0.1
  awx.awx.tower_job_template:
    name: "{{ matrix_domain }} - 1 - Configure Synapse"
    description: "Configure Synapse (homeserver) settings."
    extra_vars: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/extra_vars.json') }}"
    job_type: run
    job_tags: "start,setup-synapse"
    inventory: "{{ member_id }}"
    project: "{{ member_id }} - Matrix Docker Ansible Deploy"
    playbook: setup.yml
    credential: "{{ member_id }} - AWX SSH Key"
    survey_enabled: true
    survey_spec: "{{ lookup('file', '/var/lib/awx/projects/clients/{{ member_id }}/{{ subscription_id }}/configure_synapse.json') }}"
    become_enabled: yes
    state: present
    verbosity: 1
    tower_host: "https://{{ tower_host }}"
    tower_oauthtoken: "{{ tower_token.stdout }}"
    validate_certs: yes

